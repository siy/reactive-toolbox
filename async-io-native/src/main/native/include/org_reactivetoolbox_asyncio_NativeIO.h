/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_reactivetoolbox_asyncio_NativeIO */

#ifndef _Included_org_reactivetoolbox_asyncio_NativeIO
#define _Included_org_reactivetoolbox_asyncio_NativeIO
#ifdef __cplusplus
extern "C" {
#endif
#undef org_reactivetoolbox_asyncio_NativeIO_DEFAULT_QUEUE_SIZE
#define org_reactivetoolbox_asyncio_NativeIO_DEFAULT_QUEUE_SIZE 4096L
#undef org_reactivetoolbox_asyncio_NativeIO_DEFAULT_FLAGS
#define org_reactivetoolbox_asyncio_NativeIO_DEFAULT_FLAGS 0L
/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    initApi
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_initApi
  (JNIEnv *, jclass);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    initRing
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_initRing
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    closeRing
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_closeRing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    peekCQ
 * Signature: (J[J)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_peekCQ
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    advanceCQ
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_advanceCQ
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    spaceLeft
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_spaceLeft
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    submit
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_submit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    submitAndWait
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_submitAndWait
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepNop
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepNop
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepFsync
 * Signature: (JJIJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepFsync
  (JNIEnv *, jclass, jlong, jlong, jint, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepTimeout
 * Signature: (JJJJJJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepTimeout
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepTimeoutRemove
 * Signature: (JJJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepTimeoutRemove
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepCancel
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepCancel
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepLinkedTimeout
 * Signature: (JJJJJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepLinkedTimeout
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepSplice
 * Signature: (JJIJIJJJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepSplice
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jlong, jlong, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepReadVector
 * Signature: (JJI[J[IJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepReadVector
  (JNIEnv *, jclass, jlong, jlong, jint, jlongArray, jintArray, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepWriteVector
 * Signature: (JJI[J[IJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepWriteVector
  (JNIEnv *, jclass, jlong, jlong, jint, jlongArray, jintArray, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepReadFixed
 * Signature: (JJIJIJI)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepReadFixed
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jlong, jint);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepWriteFixed
 * Signature: (JJIJIJI)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepWriteFixed
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jlong, jint);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepRead
 * Signature: (JJIJIJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepRead
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepWrite
 * Signature: (JJIJIJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepWrite
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jint, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepOpen
 * Signature: (JJ[BIJ)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepOpen
  (JNIEnv *, jclass, jlong, jlong, jbyteArray, jint, jlong);

/*
 * Class:     org_reactivetoolbox_asyncio_NativeIO
 * Method:    prepClose
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_org_reactivetoolbox_asyncio_NativeIO_prepClose
  (JNIEnv *, jclass, jlong, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
